// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hotel_reservation.proto
// Protobuf C++ Version: 5.27.0-dev

#include "hotel_reservation.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace hotelreservation {

inline constexpr UserResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserResponse::UserResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserResponseDefaultTypeInternal() {}
  union {
    UserResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserResponseDefaultTypeInternal _UserResponse_default_instance_;

inline constexpr UserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserRequest::UserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRequestDefaultTypeInternal _UserRequest_default_instance_;

inline constexpr User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;

inline constexpr SearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : customer_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        in_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchRequest::SearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchRequestDefaultTypeInternal() {}
  union {
    SearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;

inline constexpr RoomType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bookable_rate_{0},
        total_rate_{0},
        total_rate_inclusive_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RoomType::RoomType(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RoomTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomTypeDefaultTypeInternal() {}
  union {
    RoomType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomTypeDefaultTypeInternal _RoomType_default_instance_;

inline constexpr ReservationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReservationResponse::ReservationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReservationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReservationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReservationResponseDefaultTypeInternal() {}
  union {
    ReservationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReservationResponseDefaultTypeInternal _ReservationResponse_default_instance_;

inline constexpr ReservationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : in_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hotel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        customer_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_number_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReservationRequest::ReservationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReservationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReservationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReservationRequestDefaultTypeInternal() {}
  union {
    ReservationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReservationRequestDefaultTypeInternal _ReservationRequest_default_instance_;

inline constexpr Reservation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        customer_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        in_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        number_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Reservation::Reservation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReservationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReservationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReservationDefaultTypeInternal() {}
  union {
    Reservation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReservationDefaultTypeInternal _Reservation_default_instance_;

inline constexpr RecommendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : require_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecommendRequest::RecommendRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecommendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecommendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecommendRequestDefaultTypeInternal() {}
  union {
    RecommendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecommendRequestDefaultTypeInternal _RecommendRequest_default_instance_;

inline constexpr Point::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        plat_{0},
        plon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Point::Point(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointDefaultTypeInternal() {}
  union {
    Point _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointDefaultTypeInternal _Point_default_instance_;

inline constexpr NearbyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotel_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NearbyResponse::NearbyResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NearbyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NearbyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NearbyResponseDefaultTypeInternal() {}
  union {
    NearbyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NearbyResponseDefaultTypeInternal _NearbyResponse_default_instance_;

inline constexpr NearbyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NearbyRequest::NearbyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NearbyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NearbyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NearbyRequestDefaultTypeInternal() {}
  union {
    NearbyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NearbyRequestDefaultTypeInternal _NearbyRequest_default_instance_;

inline constexpr HotelNumber::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        number_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HotelNumber::HotelNumber(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HotelNumberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HotelNumberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HotelNumberDefaultTypeInternal() {}
  union {
    HotelNumber _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HotelNumberDefaultTypeInternal _HotelNumber_default_instance_;

inline constexpr Hotel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : h_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        h_lat_{0},
        h_lon_{0},
        h_rate_{0},
        h_price_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hotel::Hotel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HotelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HotelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HotelDefaultTypeInternal() {}
  union {
    Hotel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HotelDefaultTypeInternal _Hotel_default_instance_;

inline constexpr GetRatesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotel_ids_{},
        in_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRatesRequest::GetRatesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetRatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRatesRequestDefaultTypeInternal() {}
  union {
    GetRatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRatesRequestDefaultTypeInternal _GetRatesRequest_default_instance_;

inline constexpr GetProfilesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotel_ids_{},
        locale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProfilesRequest::GetProfilesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetProfilesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProfilesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProfilesRequestDefaultTypeInternal() {}
  union {
    GetProfilesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProfilesRequestDefaultTypeInternal _GetProfilesRequest_default_instance_;

inline constexpr CheckUserResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : exists_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckUserResponse::CheckUserResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckUserResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckUserResponseDefaultTypeInternal() {}
  union {
    CheckUserResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckUserResponseDefaultTypeInternal _CheckUserResponse_default_instance_;

inline constexpr CheckUserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckUserRequest::CheckUserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckUserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckUserRequestDefaultTypeInternal() {}
  union {
    CheckUserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckUserRequestDefaultTypeInternal _CheckUserRequest_default_instance_;

inline constexpr Address::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : street_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        street_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        postal_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Address::Address(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressDefaultTypeInternal() {}
  union {
    Address _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressDefaultTypeInternal _Address_default_instance_;

inline constexpr RatePlan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hotel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        in_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RatePlan::RatePlan(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RatePlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RatePlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RatePlanDefaultTypeInternal() {}
  union {
    RatePlan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RatePlanDefaultTypeInternal _RatePlan_default_instance_;

inline constexpr HotelProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        phone_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HotelProfile::HotelProfile(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HotelProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HotelProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HotelProfileDefaultTypeInternal() {}
  union {
    HotelProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HotelProfileDefaultTypeInternal _HotelProfile_default_instance_;

inline constexpr SearchResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotels_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchResponse::SearchResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SearchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResponseDefaultTypeInternal() {}
  union {
    SearchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;

inline constexpr RecommendResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hotels_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecommendResponse::RecommendResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecommendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecommendResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecommendResponseDefaultTypeInternal() {}
  union {
    RecommendResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecommendResponseDefaultTypeInternal _RecommendResponse_default_instance_;

inline constexpr GetRatesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_plans_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRatesResponse::GetRatesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRatesResponseDefaultTypeInternal() {}
  union {
    GetRatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRatesResponseDefaultTypeInternal _GetRatesResponse_default_instance_;

inline constexpr GetProfilesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : profiles_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProfilesResponse::GetProfilesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetProfilesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProfilesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProfilesResponseDefaultTypeInternal() {}
  union {
    GetProfilesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProfilesResponseDefaultTypeInternal _GetProfilesResponse_default_instance_;
}  // namespace hotelreservation
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_hotel_5freservation_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_hotel_5freservation_2eproto = nullptr;
const ::uint32_t
    TableStruct_hotel_5freservation_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Point, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Point, _impl_.pid_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Point, _impl_.plat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Point, _impl_.plon_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::User, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::User, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _impl_.bookable_rate_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _impl_.room_description_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _impl_.total_rate_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RoomType, _impl_.total_rate_inclusive_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_.hotel_id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_.in_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_.out_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RatePlan, _impl_.room_type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _impl_.hotel_id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _impl_.customer_name_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _impl_.in_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _impl_.out_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Reservation, _impl_.number_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelNumber, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelNumber, _impl_.hotel_id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelNumber, _impl_.number_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _impl_.h_id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _impl_.h_lat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _impl_.h_lon_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _impl_.h_rate_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Hotel, _impl_.h_price_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.street_number_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.street_name_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.city_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.country_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.postal_code_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::Address, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_.phone_number_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::HotelProfile, _impl_.address_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.customer_name_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.in_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.out_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchRequest, _impl_.locale_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::SearchResponse, _impl_.hotels_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendRequest, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendRequest, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendRequest, _impl_.require_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendRequest, _impl_.locale_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::RecommendResponse, _impl_.hotels_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::UserRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::UserRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::UserRequest, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::UserResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::UserResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.in_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.out_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.hotel_id_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.customer_name_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationRequest, _impl_.room_number_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::ReservationResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::NearbyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::NearbyRequest, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::NearbyRequest, _impl_.lon_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::NearbyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::NearbyResponse, _impl_.hotel_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetProfilesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetProfilesRequest, _impl_.hotel_ids_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetProfilesRequest, _impl_.locale_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetProfilesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetProfilesResponse, _impl_.profiles_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesRequest, _impl_.hotel_ids_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesRequest, _impl_.in_date_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesRequest, _impl_.out_date_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::GetRatesResponse, _impl_.rate_plans_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::CheckUserRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::CheckUserRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::hotelreservation::CheckUserRequest, _impl_.password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::hotelreservation::CheckUserResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::hotelreservation::CheckUserResponse, _impl_.exists_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::hotelreservation::Point)},
        {11, -1, -1, sizeof(::hotelreservation::User)},
        {21, -1, -1, sizeof(::hotelreservation::RoomType)},
        {34, 47, -1, sizeof(::hotelreservation::RatePlan)},
        {52, -1, -1, sizeof(::hotelreservation::Reservation)},
        {65, -1, -1, sizeof(::hotelreservation::HotelNumber)},
        {75, -1, -1, sizeof(::hotelreservation::Hotel)},
        {88, -1, -1, sizeof(::hotelreservation::Address)},
        {104, 117, -1, sizeof(::hotelreservation::HotelProfile)},
        {122, -1, -1, sizeof(::hotelreservation::SearchRequest)},
        {136, -1, -1, sizeof(::hotelreservation::SearchResponse)},
        {145, -1, -1, sizeof(::hotelreservation::RecommendRequest)},
        {157, -1, -1, sizeof(::hotelreservation::RecommendResponse)},
        {166, -1, -1, sizeof(::hotelreservation::UserRequest)},
        {176, -1, -1, sizeof(::hotelreservation::UserResponse)},
        {185, -1, -1, sizeof(::hotelreservation::ReservationRequest)},
        {200, -1, -1, sizeof(::hotelreservation::ReservationResponse)},
        {209, -1, -1, sizeof(::hotelreservation::NearbyRequest)},
        {219, -1, -1, sizeof(::hotelreservation::NearbyResponse)},
        {228, -1, -1, sizeof(::hotelreservation::GetProfilesRequest)},
        {238, -1, -1, sizeof(::hotelreservation::GetProfilesResponse)},
        {247, -1, -1, sizeof(::hotelreservation::GetRatesRequest)},
        {258, -1, -1, sizeof(::hotelreservation::GetRatesResponse)},
        {267, -1, -1, sizeof(::hotelreservation::CheckUserRequest)},
        {277, -1, -1, sizeof(::hotelreservation::CheckUserResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::hotelreservation::_Point_default_instance_._instance,
    &::hotelreservation::_User_default_instance_._instance,
    &::hotelreservation::_RoomType_default_instance_._instance,
    &::hotelreservation::_RatePlan_default_instance_._instance,
    &::hotelreservation::_Reservation_default_instance_._instance,
    &::hotelreservation::_HotelNumber_default_instance_._instance,
    &::hotelreservation::_Hotel_default_instance_._instance,
    &::hotelreservation::_Address_default_instance_._instance,
    &::hotelreservation::_HotelProfile_default_instance_._instance,
    &::hotelreservation::_SearchRequest_default_instance_._instance,
    &::hotelreservation::_SearchResponse_default_instance_._instance,
    &::hotelreservation::_RecommendRequest_default_instance_._instance,
    &::hotelreservation::_RecommendResponse_default_instance_._instance,
    &::hotelreservation::_UserRequest_default_instance_._instance,
    &::hotelreservation::_UserResponse_default_instance_._instance,
    &::hotelreservation::_ReservationRequest_default_instance_._instance,
    &::hotelreservation::_ReservationResponse_default_instance_._instance,
    &::hotelreservation::_NearbyRequest_default_instance_._instance,
    &::hotelreservation::_NearbyResponse_default_instance_._instance,
    &::hotelreservation::_GetProfilesRequest_default_instance_._instance,
    &::hotelreservation::_GetProfilesResponse_default_instance_._instance,
    &::hotelreservation::_GetRatesRequest_default_instance_._instance,
    &::hotelreservation::_GetRatesResponse_default_instance_._instance,
    &::hotelreservation::_CheckUserRequest_default_instance_._instance,
    &::hotelreservation::_CheckUserResponse_default_instance_._instance,
};
const char descriptor_table_protodef_hotel_5freservation_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027hotel_reservation.proto\022\020hotelreservat"
    "ion\"0\n\005Point\022\013\n\003pid\030\001 \001(\t\022\014\n\004plat\030\002 \001(\001\022"
    "\014\n\004plon\030\003 \001(\001\"*\n\004User\022\020\n\010username\030\001 \001(\t\022"
    "\020\n\010password\030\002 \001(\t\"{\n\010RoomType\022\025\n\rbookabl"
    "e_rate\030\001 \001(\001\022\014\n\004code\030\002 \001(\t\022\030\n\020room_descr"
    "iption\030\003 \001(\t\022\022\n\ntotal_rate\030\004 \001(\001\022\034\n\024tota"
    "l_rate_inclusive\030\005 \001(\001\"|\n\010RatePlan\022\020\n\010ho"
    "tel_id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\017\n\007in_date\030\003 "
    "\001(\t\022\020\n\010out_date\030\004 \001(\t\022-\n\troom_type\030\005 \001(\013"
    "2\032.hotelreservation.RoomType\"i\n\013Reservat"
    "ion\022\020\n\010hotel_id\030\001 \001(\t\022\025\n\rcustomer_name\030\002"
    " \001(\t\022\017\n\007in_date\030\003 \001(\t\022\020\n\010out_date\030\004 \001(\t\022"
    "\016\n\006number\030\005 \001(\003\"/\n\013HotelNumber\022\020\n\010hotel_"
    "id\030\001 \001(\t\022\016\n\006number\030\002 \001(\003\"T\n\005Hotel\022\014\n\004h_i"
    "d\030\001 \001(\t\022\r\n\005h_lat\030\002 \001(\001\022\r\n\005h_lon\030\003 \001(\001\022\016\n"
    "\006h_rate\030\004 \001(\001\022\017\n\007h_price\030\005 \001(\001\"\222\001\n\007Addre"
    "ss\022\025\n\rstreet_number\030\001 \001(\t\022\023\n\013street_name"
    "\030\002 \001(\t\022\014\n\004city\030\003 \001(\t\022\r\n\005state\030\004 \001(\t\022\017\n\007c"
    "ountry\030\005 \001(\t\022\023\n\013postal_code\030\006 \001(\t\022\013\n\003lat"
    "\030\007 \001(\001\022\013\n\003lon\030\010 \001(\001\"\177\n\014HotelProfile\022\n\n\002i"
    "d\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\024\n\014phone_number\030\003 "
    "\001(\t\022\023\n\013description\030\004 \001(\t\022*\n\007address\030\005 \001("
    "\0132\031.hotelreservation.Address\"s\n\rSearchRe"
    "quest\022\025\n\rcustomer_name\030\001 \001(\t\022\017\n\007in_date\030"
    "\002 \001(\t\022\020\n\010out_date\030\003 \001(\t\022\013\n\003lat\030\004 \001(\001\022\013\n\003"
    "lon\030\005 \001(\001\022\016\n\006locale\030\006 \001(\t\"@\n\016SearchRespo"
    "nse\022.\n\006hotels\030\001 \003(\0132\036.hotelreservation.H"
    "otelProfile\"M\n\020RecommendRequest\022\013\n\003lat\030\001"
    " \001(\001\022\013\n\003lon\030\002 \001(\001\022\017\n\007require\030\003 \001(\t\022\016\n\006lo"
    "cale\030\004 \001(\t\"C\n\021RecommendResponse\022.\n\006hotel"
    "s\030\001 \003(\0132\036.hotelreservation.HotelProfile\""
    "1\n\013UserRequest\022\020\n\010username\030\001 \001(\t\022\020\n\010pass"
    "word\030\002 \001(\t\"\037\n\014UserResponse\022\017\n\007message\030\001 "
    "\001(\t\"\231\001\n\022ReservationRequest\022\017\n\007in_date\030\001 "
    "\001(\t\022\020\n\010out_date\030\002 \001(\t\022\020\n\010hotel_id\030\003 \001(\t\022"
    "\025\n\rcustomer_name\030\004 \001(\t\022\020\n\010username\030\005 \001(\t"
    "\022\020\n\010password\030\006 \001(\t\022\023\n\013room_number\030\007 \001(\003\""
    "&\n\023ReservationResponse\022\017\n\007message\030\001 \001(\t\""
    ")\n\rNearbyRequest\022\013\n\003lat\030\001 \001(\001\022\013\n\003lon\030\002 \001"
    "(\001\"#\n\016NearbyResponse\022\021\n\thotel_ids\030\001 \003(\t\""
    "7\n\022GetProfilesRequest\022\021\n\thotel_ids\030\001 \003(\t"
    "\022\016\n\006locale\030\002 \001(\t\"G\n\023GetProfilesResponse\022"
    "0\n\010profiles\030\001 \003(\0132\036.hotelreservation.Hot"
    "elProfile\"G\n\017GetRatesRequest\022\021\n\thotel_id"
    "s\030\001 \003(\t\022\017\n\007in_date\030\002 \001(\t\022\020\n\010out_date\030\003 \001"
    "(\t\"B\n\020GetRatesResponse\022.\n\nrate_plans\030\001 \003"
    "(\0132\032.hotelreservation.RatePlan\"6\n\020CheckU"
    "serRequest\022\020\n\010username\030\001 \001(\t\022\020\n\010password"
    "\030\002 \001(\t\"#\n\021CheckUserResponse\022\016\n\006exists\030\001 "
    "\001(\010b\006proto3"
};
static ::absl::once_flag descriptor_table_hotel_5freservation_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_hotel_5freservation_2eproto = {
    false,
    false,
    1971,
    descriptor_table_protodef_hotel_5freservation_2eproto,
    "hotel_reservation.proto",
    &descriptor_table_hotel_5freservation_2eproto_once,
    nullptr,
    0,
    25,
    schemas,
    file_default_instances,
    TableStruct_hotel_5freservation_2eproto::offsets,
    file_level_enum_descriptors_hotel_5freservation_2eproto,
    file_level_service_descriptors_hotel_5freservation_2eproto,
};
namespace hotelreservation {
// ===================================================================

class Point::_Internal {
 public:
};

Point::Point(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.Point)
}
inline PROTOBUF_NDEBUG_INLINE Point::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : pid_(arena, from.pid_),
        _cached_size_{0} {}

Point::Point(
    ::google::protobuf::Arena* arena,
    const Point& from)
    : ::google::protobuf::Message(arena) {
  Point* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, plat_),
           offsetof(Impl_, plon_) -
               offsetof(Impl_, plat_) +
               sizeof(Impl_::plon_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.Point)
}
inline PROTOBUF_NDEBUG_INLINE Point::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pid_(arena),
        _cached_size_{0} {}

inline void Point::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plat_),
           0,
           offsetof(Impl_, plon_) -
               offsetof(Impl_, plat_) +
               sizeof(Impl_::plon_));
}
Point::~Point() {
  // @@protoc_insertion_point(destructor:hotelreservation.Point)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Point::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Point::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Point, _impl_._cached_size_),
              false,
          },
          &Point::MergeImpl,
          &Point::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 34, 2> Point::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Point_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::Point>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string pid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Point, _impl_.pid_)}},
    // double plat = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Point, _impl_.plat_)}},
    // double plon = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Point, _impl_.plon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string pid = 1;
    {PROTOBUF_FIELD_OFFSET(Point, _impl_.pid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double plat = 2;
    {PROTOBUF_FIELD_OFFSET(Point, _impl_.plat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double plon = 3;
    {PROTOBUF_FIELD_OFFSET(Point, _impl_.plon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\26\3\0\0\0\0\0\0"
    "hotelreservation.Point"
    "pid"
  }},
};

PROTOBUF_NOINLINE void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.Point)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pid_.ClearToEmpty();
  ::memset(&_impl_.plat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.plon_) -
      reinterpret_cast<char*>(&_impl_.plat_)) + sizeof(_impl_.plon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Point::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Point::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.Point)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string pid = 1;
  if (!this->_internal_pid().empty()) {
    const std::string& _s = this->_internal_pid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Point.pid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // double plat = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plat = this->_internal_plat();
  ::uint64_t raw_plat;
  memcpy(&raw_plat, &tmp_plat, sizeof(tmp_plat));
  if (raw_plat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_plat(), target);
  }

  // double plon = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plon = this->_internal_plon();
  ::uint64_t raw_plon;
  memcpy(&raw_plon, &tmp_plon, sizeof(tmp_plon));
  if (raw_plon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_plon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.Point)
  return target;
}

::size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.Point)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string pid = 1;
  if (!this->_internal_pid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pid());
  }

  // double plat = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plat = this->_internal_plat();
  ::uint64_t raw_plat;
  memcpy(&raw_plat, &tmp_plat, sizeof(tmp_plat));
  if (raw_plat != 0) {
    total_size += 9;
  }

  // double plon = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plon = this->_internal_plon();
  ::uint64_t raw_plon;
  memcpy(&raw_plon, &tmp_plon, sizeof(tmp_plon));
  if (raw_plon != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Point::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point*>(&to_msg);
  auto& from = static_cast<const Point&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.Point)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pid().empty()) {
    _this->_internal_set_pid(from._internal_pid());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plat = from._internal_plat();
  ::uint64_t raw_plat;
  memcpy(&raw_plat, &tmp_plat, sizeof(tmp_plat));
  if (raw_plat != 0) {
    _this->_impl_.plat_ = from._impl_.plat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_plon = from._internal_plon();
  ::uint64_t raw_plon;
  memcpy(&raw_plon, &tmp_plon, sizeof(tmp_plon));
  if (raw_plon != 0) {
    _this->_impl_.plon_ = from._impl_.plon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Point::IsInitialized() const {
  return true;
}

void Point::InternalSwap(Point* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pid_, &other->_impl_.pid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point, _impl_.plon_)
      + sizeof(Point::_impl_.plon_)
      - PROTOBUF_FIELD_OFFSET(Point, _impl_.plat_)>(
          reinterpret_cast<char*>(&_impl_.plat_),
          reinterpret_cast<char*>(&other->_impl_.plat_));
}

::google::protobuf::Metadata Point::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class User::_Internal {
 public:
};

User::User(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

User::User(
    ::google::protobuf::Arena* arena,
    const User& from)
    : ::google::protobuf::Message(arena) {
  User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
User::~User() {
  // @@protoc_insertion_point(destructor:hotelreservation.User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
User::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(User, _impl_._cached_size_),
              false,
          },
          &User::MergeImpl,
          &User::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\10\10\0\0\0\0\0"
    "hotelreservation.User"
    "username"
    "password"
  }},
};

PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.User.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.User.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.User)
  return target;
}

::size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User::IsInitialized() const {
  return true;
}

void User::InternalSwap(User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomType::_Internal {
 public:
};

RoomType::RoomType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.RoomType)
}
inline PROTOBUF_NDEBUG_INLINE RoomType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : code_(arena, from.code_),
        room_description_(arena, from.room_description_),
        _cached_size_{0} {}

RoomType::RoomType(
    ::google::protobuf::Arena* arena,
    const RoomType& from)
    : ::google::protobuf::Message(arena) {
  RoomType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bookable_rate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bookable_rate_),
           offsetof(Impl_, total_rate_inclusive_) -
               offsetof(Impl_, bookable_rate_) +
               sizeof(Impl_::total_rate_inclusive_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.RoomType)
}
inline PROTOBUF_NDEBUG_INLINE RoomType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        room_description_(arena),
        _cached_size_{0} {}

inline void RoomType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bookable_rate_),
           0,
           offsetof(Impl_, total_rate_inclusive_) -
               offsetof(Impl_, bookable_rate_) +
               sizeof(Impl_::total_rate_inclusive_));
}
RoomType::~RoomType() {
  // @@protoc_insertion_point(destructor:hotelreservation.RoomType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoomType::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.room_description_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RoomType::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RoomType, _impl_._cached_size_),
              false,
          },
          &RoomType::MergeImpl,
          &RoomType::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 54, 2> RoomType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RoomType_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::RoomType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double bookable_rate = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(RoomType, _impl_.bookable_rate_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoomType, _impl_.code_)}},
    // string room_description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RoomType, _impl_.room_description_)}},
    // double total_rate = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(RoomType, _impl_.total_rate_)}},
    // double total_rate_inclusive = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(RoomType, _impl_.total_rate_inclusive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double bookable_rate = 1;
    {PROTOBUF_FIELD_OFFSET(RoomType, _impl_.bookable_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(RoomType, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string room_description = 3;
    {PROTOBUF_FIELD_OFFSET(RoomType, _impl_.room_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double total_rate = 4;
    {PROTOBUF_FIELD_OFFSET(RoomType, _impl_.total_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double total_rate_inclusive = 5;
    {PROTOBUF_FIELD_OFFSET(RoomType, _impl_.total_rate_inclusive_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\31\0\4\20\0\0\0\0"
    "hotelreservation.RoomType"
    "code"
    "room_description"
  }},
};

PROTOBUF_NOINLINE void RoomType::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.RoomType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.room_description_.ClearToEmpty();
  ::memset(&_impl_.bookable_rate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_rate_inclusive_) -
      reinterpret_cast<char*>(&_impl_.bookable_rate_)) + sizeof(_impl_.total_rate_inclusive_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoomType::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* RoomType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.RoomType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double bookable_rate = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bookable_rate = this->_internal_bookable_rate();
  ::uint64_t raw_bookable_rate;
  memcpy(&raw_bookable_rate, &tmp_bookable_rate, sizeof(tmp_bookable_rate));
  if (raw_bookable_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_bookable_rate(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RoomType.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string room_description = 3;
  if (!this->_internal_room_description().empty()) {
    const std::string& _s = this->_internal_room_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RoomType.room_description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // double total_rate = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate = this->_internal_total_rate();
  ::uint64_t raw_total_rate;
  memcpy(&raw_total_rate, &tmp_total_rate, sizeof(tmp_total_rate));
  if (raw_total_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_total_rate(), target);
  }

  // double total_rate_inclusive = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate_inclusive = this->_internal_total_rate_inclusive();
  ::uint64_t raw_total_rate_inclusive;
  memcpy(&raw_total_rate_inclusive, &tmp_total_rate_inclusive, sizeof(tmp_total_rate_inclusive));
  if (raw_total_rate_inclusive != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_total_rate_inclusive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.RoomType)
  return target;
}

::size_t RoomType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.RoomType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string room_description = 3;
  if (!this->_internal_room_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_room_description());
  }

  // double bookable_rate = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bookable_rate = this->_internal_bookable_rate();
  ::uint64_t raw_bookable_rate;
  memcpy(&raw_bookable_rate, &tmp_bookable_rate, sizeof(tmp_bookable_rate));
  if (raw_bookable_rate != 0) {
    total_size += 9;
  }

  // double total_rate = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate = this->_internal_total_rate();
  ::uint64_t raw_total_rate;
  memcpy(&raw_total_rate, &tmp_total_rate, sizeof(tmp_total_rate));
  if (raw_total_rate != 0) {
    total_size += 9;
  }

  // double total_rate_inclusive = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate_inclusive = this->_internal_total_rate_inclusive();
  ::uint64_t raw_total_rate_inclusive;
  memcpy(&raw_total_rate_inclusive, &tmp_total_rate_inclusive, sizeof(tmp_total_rate_inclusive));
  if (raw_total_rate_inclusive != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RoomType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomType*>(&to_msg);
  auto& from = static_cast<const RoomType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.RoomType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_room_description().empty()) {
    _this->_internal_set_room_description(from._internal_room_description());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bookable_rate = from._internal_bookable_rate();
  ::uint64_t raw_bookable_rate;
  memcpy(&raw_bookable_rate, &tmp_bookable_rate, sizeof(tmp_bookable_rate));
  if (raw_bookable_rate != 0) {
    _this->_impl_.bookable_rate_ = from._impl_.bookable_rate_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate = from._internal_total_rate();
  ::uint64_t raw_total_rate;
  memcpy(&raw_total_rate, &tmp_total_rate, sizeof(tmp_total_rate));
  if (raw_total_rate != 0) {
    _this->_impl_.total_rate_ = from._impl_.total_rate_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total_rate_inclusive = from._internal_total_rate_inclusive();
  ::uint64_t raw_total_rate_inclusive;
  memcpy(&raw_total_rate_inclusive, &tmp_total_rate_inclusive, sizeof(tmp_total_rate_inclusive));
  if (raw_total_rate_inclusive != 0) {
    _this->_impl_.total_rate_inclusive_ = from._impl_.total_rate_inclusive_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomType::CopyFrom(const RoomType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.RoomType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoomType::IsInitialized() const {
  return true;
}

void RoomType::InternalSwap(RoomType* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_description_, &other->_impl_.room_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomType, _impl_.total_rate_inclusive_)
      + sizeof(RoomType::_impl_.total_rate_inclusive_)
      - PROTOBUF_FIELD_OFFSET(RoomType, _impl_.bookable_rate_)>(
          reinterpret_cast<char*>(&_impl_.bookable_rate_),
          reinterpret_cast<char*>(&other->_impl_.bookable_rate_));
}

::google::protobuf::Metadata RoomType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RatePlan::_Internal {
 public:
  using HasBits = decltype(std::declval<RatePlan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RatePlan, _impl_._has_bits_);
};

RatePlan::RatePlan(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.RatePlan)
}
inline PROTOBUF_NDEBUG_INLINE RatePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hotel_id_(arena, from.hotel_id_),
        code_(arena, from.code_),
        in_date_(arena, from.in_date_),
        out_date_(arena, from.out_date_) {}

RatePlan::RatePlan(
    ::google::protobuf::Arena* arena,
    const RatePlan& from)
    : ::google::protobuf::Message(arena) {
  RatePlan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_type_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::hotelreservation::RoomType>(
                              arena, *from._impl_.room_type_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:hotelreservation.RatePlan)
}
inline PROTOBUF_NDEBUG_INLINE RatePlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        hotel_id_(arena),
        code_(arena),
        in_date_(arena),
        out_date_(arena) {}

inline void RatePlan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_type_ = {};
}
RatePlan::~RatePlan() {
  // @@protoc_insertion_point(destructor:hotelreservation.RatePlan)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RatePlan::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hotel_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.in_date_.Destroy();
  _impl_.out_date_.Destroy();
  delete _impl_.room_type_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RatePlan::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RatePlan, _impl_._cached_size_),
              false,
          },
          &RatePlan::MergeImpl,
          &RatePlan::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 61, 2> RatePlan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RatePlan, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RatePlan_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::RatePlan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hotel_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.hotel_id_)}},
    // string code = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.code_)}},
    // string in_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.in_date_)}},
    // string out_date = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.out_date_)}},
    // .hotelreservation.RoomType room_type = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.room_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string hotel_id = 1;
    {PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.hotel_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string code = 2;
    {PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string in_date = 3;
    {PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.in_date_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_date = 4;
    {PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.out_date_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .hotelreservation.RoomType room_type = 5;
    {PROTOBUF_FIELD_OFFSET(RatePlan, _impl_.room_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::RoomType>()},
  }}, {{
    "\31\10\4\7\10\0\0\0"
    "hotelreservation.RatePlan"
    "hotel_id"
    "code"
    "in_date"
    "out_date"
  }},
};

PROTOBUF_NOINLINE void RatePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.RatePlan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.in_date_.ClearToEmpty();
  _impl_.out_date_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.room_type_ != nullptr);
    _impl_.room_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RatePlan::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* RatePlan::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.RatePlan)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    const std::string& _s = this->_internal_hotel_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RatePlan.hotel_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RatePlan.code");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string in_date = 3;
  if (!this->_internal_in_date().empty()) {
    const std::string& _s = this->_internal_in_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RatePlan.in_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string out_date = 4;
  if (!this->_internal_out_date().empty()) {
    const std::string& _s = this->_internal_out_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RatePlan.out_date");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hotelreservation.RoomType room_type = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.room_type_, _impl_.room_type_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.RatePlan)
  return target;
}

::size_t RatePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.RatePlan)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hotel_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string in_date = 3;
  if (!this->_internal_in_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_in_date());
  }

  // string out_date = 4;
  if (!this->_internal_out_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_date());
  }

  // .hotelreservation.RoomType room_type = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.room_type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RatePlan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RatePlan*>(&to_msg);
  auto& from = static_cast<const RatePlan&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.RatePlan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hotel_id().empty()) {
    _this->_internal_set_hotel_id(from._internal_hotel_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_in_date().empty()) {
    _this->_internal_set_in_date(from._internal_in_date());
  }
  if (!from._internal_out_date().empty()) {
    _this->_internal_set_out_date(from._internal_out_date());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.room_type_ != nullptr);
    if (_this->_impl_.room_type_ == nullptr) {
      _this->_impl_.room_type_ =
          ::google::protobuf::Message::CopyConstruct<::hotelreservation::RoomType>(arena, *from._impl_.room_type_);
    } else {
      _this->_impl_.room_type_->MergeFrom(*from._impl_.room_type_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RatePlan::CopyFrom(const RatePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.RatePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RatePlan::IsInitialized() const {
  return true;
}

void RatePlan::InternalSwap(RatePlan* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hotel_id_, &other->_impl_.hotel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.in_date_, &other->_impl_.in_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_date_, &other->_impl_.out_date_, arena);
  swap(_impl_.room_type_, other->_impl_.room_type_);
}

::google::protobuf::Metadata RatePlan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Reservation::_Internal {
 public:
};

Reservation::Reservation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.Reservation)
}
inline PROTOBUF_NDEBUG_INLINE Reservation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotel_id_(arena, from.hotel_id_),
        customer_name_(arena, from.customer_name_),
        in_date_(arena, from.in_date_),
        out_date_(arena, from.out_date_),
        _cached_size_{0} {}

Reservation::Reservation(
    ::google::protobuf::Arena* arena,
    const Reservation& from)
    : ::google::protobuf::Message(arena) {
  Reservation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.number_ = from._impl_.number_;

  // @@protoc_insertion_point(copy_constructor:hotelreservation.Reservation)
}
inline PROTOBUF_NDEBUG_INLINE Reservation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotel_id_(arena),
        customer_name_(arena),
        in_date_(arena),
        out_date_(arena),
        _cached_size_{0} {}

inline void Reservation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.number_ = {};
}
Reservation::~Reservation() {
  // @@protoc_insertion_point(destructor:hotelreservation.Reservation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Reservation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hotel_id_.Destroy();
  _impl_.customer_name_.Destroy();
  _impl_.in_date_.Destroy();
  _impl_.out_date_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Reservation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Reservation, _impl_._cached_size_),
              false,
          },
          &Reservation::MergeImpl,
          &Reservation::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 73, 2> Reservation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Reservation_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::Reservation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hotel_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Reservation, _impl_.hotel_id_)}},
    // string customer_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Reservation, _impl_.customer_name_)}},
    // string in_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Reservation, _impl_.in_date_)}},
    // string out_date = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Reservation, _impl_.out_date_)}},
    // int64 number = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Reservation, _impl_.number_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Reservation, _impl_.number_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string hotel_id = 1;
    {PROTOBUF_FIELD_OFFSET(Reservation, _impl_.hotel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string customer_name = 2;
    {PROTOBUF_FIELD_OFFSET(Reservation, _impl_.customer_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string in_date = 3;
    {PROTOBUF_FIELD_OFFSET(Reservation, _impl_.in_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_date = 4;
    {PROTOBUF_FIELD_OFFSET(Reservation, _impl_.out_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 number = 5;
    {PROTOBUF_FIELD_OFFSET(Reservation, _impl_.number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\34\10\15\7\10\0\0\0"
    "hotelreservation.Reservation"
    "hotel_id"
    "customer_name"
    "in_date"
    "out_date"
  }},
};

PROTOBUF_NOINLINE void Reservation::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.Reservation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_id_.ClearToEmpty();
  _impl_.customer_name_.ClearToEmpty();
  _impl_.in_date_.ClearToEmpty();
  _impl_.out_date_.ClearToEmpty();
  _impl_.number_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Reservation::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Reservation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.Reservation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    const std::string& _s = this->_internal_hotel_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Reservation.hotel_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string customer_name = 2;
  if (!this->_internal_customer_name().empty()) {
    const std::string& _s = this->_internal_customer_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Reservation.customer_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string in_date = 3;
  if (!this->_internal_in_date().empty()) {
    const std::string& _s = this->_internal_in_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Reservation.in_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string out_date = 4;
  if (!this->_internal_out_date().empty()) {
    const std::string& _s = this->_internal_out_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Reservation.out_date");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 number = 5;
  if (this->_internal_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.Reservation)
  return target;
}

::size_t Reservation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.Reservation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hotel_id());
  }

  // string customer_name = 2;
  if (!this->_internal_customer_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_customer_name());
  }

  // string in_date = 3;
  if (!this->_internal_in_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_in_date());
  }

  // string out_date = 4;
  if (!this->_internal_out_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_date());
  }

  // int64 number = 5;
  if (this->_internal_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Reservation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Reservation*>(&to_msg);
  auto& from = static_cast<const Reservation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.Reservation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hotel_id().empty()) {
    _this->_internal_set_hotel_id(from._internal_hotel_id());
  }
  if (!from._internal_customer_name().empty()) {
    _this->_internal_set_customer_name(from._internal_customer_name());
  }
  if (!from._internal_in_date().empty()) {
    _this->_internal_set_in_date(from._internal_in_date());
  }
  if (!from._internal_out_date().empty()) {
    _this->_internal_set_out_date(from._internal_out_date());
  }
  if (from._internal_number() != 0) {
    _this->_impl_.number_ = from._impl_.number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Reservation::CopyFrom(const Reservation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.Reservation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Reservation::IsInitialized() const {
  return true;
}

void Reservation::InternalSwap(Reservation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hotel_id_, &other->_impl_.hotel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.customer_name_, &other->_impl_.customer_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.in_date_, &other->_impl_.in_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_date_, &other->_impl_.out_date_, arena);
        swap(_impl_.number_, other->_impl_.number_);
}

::google::protobuf::Metadata Reservation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HotelNumber::_Internal {
 public:
};

HotelNumber::HotelNumber(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.HotelNumber)
}
inline PROTOBUF_NDEBUG_INLINE HotelNumber::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotel_id_(arena, from.hotel_id_),
        _cached_size_{0} {}

HotelNumber::HotelNumber(
    ::google::protobuf::Arena* arena,
    const HotelNumber& from)
    : ::google::protobuf::Message(arena) {
  HotelNumber* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.number_ = from._impl_.number_;

  // @@protoc_insertion_point(copy_constructor:hotelreservation.HotelNumber)
}
inline PROTOBUF_NDEBUG_INLINE HotelNumber::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotel_id_(arena),
        _cached_size_{0} {}

inline void HotelNumber::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.number_ = {};
}
HotelNumber::~HotelNumber() {
  // @@protoc_insertion_point(destructor:hotelreservation.HotelNumber)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HotelNumber::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hotel_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HotelNumber::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(HotelNumber, _impl_._cached_size_),
              false,
          },
          &HotelNumber::MergeImpl,
          &HotelNumber::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> HotelNumber::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HotelNumber_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::HotelNumber>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HotelNumber, _impl_.number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HotelNumber, _impl_.number_)}},
    // string hotel_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HotelNumber, _impl_.hotel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hotel_id = 1;
    {PROTOBUF_FIELD_OFFSET(HotelNumber, _impl_.hotel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 number = 2;
    {PROTOBUF_FIELD_OFFSET(HotelNumber, _impl_.number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\34\10\0\0\0\0\0\0"
    "hotelreservation.HotelNumber"
    "hotel_id"
  }},
};

PROTOBUF_NOINLINE void HotelNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.HotelNumber)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_id_.ClearToEmpty();
  _impl_.number_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HotelNumber::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* HotelNumber::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.HotelNumber)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    const std::string& _s = this->_internal_hotel_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.HotelNumber.hotel_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 number = 2;
  if (this->_internal_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.HotelNumber)
  return target;
}

::size_t HotelNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.HotelNumber)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string hotel_id = 1;
  if (!this->_internal_hotel_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hotel_id());
  }

  // int64 number = 2;
  if (this->_internal_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HotelNumber::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HotelNumber*>(&to_msg);
  auto& from = static_cast<const HotelNumber&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.HotelNumber)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hotel_id().empty()) {
    _this->_internal_set_hotel_id(from._internal_hotel_id());
  }
  if (from._internal_number() != 0) {
    _this->_impl_.number_ = from._impl_.number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HotelNumber::CopyFrom(const HotelNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.HotelNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HotelNumber::IsInitialized() const {
  return true;
}

void HotelNumber::InternalSwap(HotelNumber* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hotel_id_, &other->_impl_.hotel_id_, arena);
        swap(_impl_.number_, other->_impl_.number_);
}

::google::protobuf::Metadata HotelNumber::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Hotel::_Internal {
 public:
};

Hotel::Hotel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.Hotel)
}
inline PROTOBUF_NDEBUG_INLINE Hotel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : h_id_(arena, from.h_id_),
        _cached_size_{0} {}

Hotel::Hotel(
    ::google::protobuf::Arena* arena,
    const Hotel& from)
    : ::google::protobuf::Message(arena) {
  Hotel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, h_lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, h_lat_),
           offsetof(Impl_, h_price_) -
               offsetof(Impl_, h_lat_) +
               sizeof(Impl_::h_price_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.Hotel)
}
inline PROTOBUF_NDEBUG_INLINE Hotel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : h_id_(arena),
        _cached_size_{0} {}

inline void Hotel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, h_lat_),
           0,
           offsetof(Impl_, h_price_) -
               offsetof(Impl_, h_lat_) +
               sizeof(Impl_::h_price_));
}
Hotel::~Hotel() {
  // @@protoc_insertion_point(destructor:hotelreservation.Hotel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Hotel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.h_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hotel::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Hotel, _impl_._cached_size_),
              false,
          },
          &Hotel::MergeImpl,
          &Hotel::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 35, 2> Hotel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hotel_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::Hotel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string h_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_id_)}},
    // double h_lat = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_lat_)}},
    // double h_lon = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_lon_)}},
    // double h_rate = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_rate_)}},
    // double h_price = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_price_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string h_id = 1;
    {PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double h_lat = 2;
    {PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double h_lon = 3;
    {PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double h_rate = 4;
    {PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double h_price = 5;
    {PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\26\4\0\0\0\0\0\0"
    "hotelreservation.Hotel"
    "h_id"
  }},
};

PROTOBUF_NOINLINE void Hotel::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.Hotel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.h_id_.ClearToEmpty();
  ::memset(&_impl_.h_lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.h_price_) -
      reinterpret_cast<char*>(&_impl_.h_lat_)) + sizeof(_impl_.h_price_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Hotel::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Hotel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.Hotel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string h_id = 1;
  if (!this->_internal_h_id().empty()) {
    const std::string& _s = this->_internal_h_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Hotel.h_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // double h_lat = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lat = this->_internal_h_lat();
  ::uint64_t raw_h_lat;
  memcpy(&raw_h_lat, &tmp_h_lat, sizeof(tmp_h_lat));
  if (raw_h_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_h_lat(), target);
  }

  // double h_lon = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lon = this->_internal_h_lon();
  ::uint64_t raw_h_lon;
  memcpy(&raw_h_lon, &tmp_h_lon, sizeof(tmp_h_lon));
  if (raw_h_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_h_lon(), target);
  }

  // double h_rate = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_rate = this->_internal_h_rate();
  ::uint64_t raw_h_rate;
  memcpy(&raw_h_rate, &tmp_h_rate, sizeof(tmp_h_rate));
  if (raw_h_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_h_rate(), target);
  }

  // double h_price = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_price = this->_internal_h_price();
  ::uint64_t raw_h_price;
  memcpy(&raw_h_price, &tmp_h_price, sizeof(tmp_h_price));
  if (raw_h_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_h_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.Hotel)
  return target;
}

::size_t Hotel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.Hotel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string h_id = 1;
  if (!this->_internal_h_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_h_id());
  }

  // double h_lat = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lat = this->_internal_h_lat();
  ::uint64_t raw_h_lat;
  memcpy(&raw_h_lat, &tmp_h_lat, sizeof(tmp_h_lat));
  if (raw_h_lat != 0) {
    total_size += 9;
  }

  // double h_lon = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lon = this->_internal_h_lon();
  ::uint64_t raw_h_lon;
  memcpy(&raw_h_lon, &tmp_h_lon, sizeof(tmp_h_lon));
  if (raw_h_lon != 0) {
    total_size += 9;
  }

  // double h_rate = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_rate = this->_internal_h_rate();
  ::uint64_t raw_h_rate;
  memcpy(&raw_h_rate, &tmp_h_rate, sizeof(tmp_h_rate));
  if (raw_h_rate != 0) {
    total_size += 9;
  }

  // double h_price = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_price = this->_internal_h_price();
  ::uint64_t raw_h_price;
  memcpy(&raw_h_price, &tmp_h_price, sizeof(tmp_h_price));
  if (raw_h_price != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Hotel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hotel*>(&to_msg);
  auto& from = static_cast<const Hotel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.Hotel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_h_id().empty()) {
    _this->_internal_set_h_id(from._internal_h_id());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lat = from._internal_h_lat();
  ::uint64_t raw_h_lat;
  memcpy(&raw_h_lat, &tmp_h_lat, sizeof(tmp_h_lat));
  if (raw_h_lat != 0) {
    _this->_impl_.h_lat_ = from._impl_.h_lat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_lon = from._internal_h_lon();
  ::uint64_t raw_h_lon;
  memcpy(&raw_h_lon, &tmp_h_lon, sizeof(tmp_h_lon));
  if (raw_h_lon != 0) {
    _this->_impl_.h_lon_ = from._impl_.h_lon_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_rate = from._internal_h_rate();
  ::uint64_t raw_h_rate;
  memcpy(&raw_h_rate, &tmp_h_rate, sizeof(tmp_h_rate));
  if (raw_h_rate != 0) {
    _this->_impl_.h_rate_ = from._impl_.h_rate_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_h_price = from._internal_h_price();
  ::uint64_t raw_h_price;
  memcpy(&raw_h_price, &tmp_h_price, sizeof(tmp_h_price));
  if (raw_h_price != 0) {
    _this->_impl_.h_price_ = from._impl_.h_price_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hotel::CopyFrom(const Hotel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.Hotel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hotel::IsInitialized() const {
  return true;
}

void Hotel::InternalSwap(Hotel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.h_id_, &other->_impl_.h_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_price_)
      + sizeof(Hotel::_impl_.h_price_)
      - PROTOBUF_FIELD_OFFSET(Hotel, _impl_.h_lat_)>(
          reinterpret_cast<char*>(&_impl_.h_lat_),
          reinterpret_cast<char*>(&other->_impl_.h_lat_));
}

::google::protobuf::Metadata Hotel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address::_Internal {
 public:
};

Address::Address(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.Address)
}
inline PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : street_number_(arena, from.street_number_),
        street_name_(arena, from.street_name_),
        city_(arena, from.city_),
        state_(arena, from.state_),
        country_(arena, from.country_),
        postal_code_(arena, from.postal_code_),
        _cached_size_{0} {}

Address::Address(
    ::google::protobuf::Arena* arena,
    const Address& from)
    : ::google::protobuf::Message(arena) {
  Address* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.Address)
}
inline PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : street_number_(arena),
        street_name_(arena),
        city_(arena),
        state_(arena),
        country_(arena),
        postal_code_(arena),
        _cached_size_{0} {}

inline void Address::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
Address::~Address() {
  // @@protoc_insertion_point(destructor:hotelreservation.Address)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Address::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.street_number_.Destroy();
  _impl_.street_name_.Destroy();
  _impl_.city_.Destroy();
  _impl_.state_.Destroy();
  _impl_.country_.Destroy();
  _impl_.postal_code_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Address::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Address, _impl_._cached_size_),
              false,
          },
          &Address::MergeImpl,
          &Address::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 92, 2> Address::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Address_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::Address>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double lon = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.lon_)}},
    // string street_number = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.street_number_)}},
    // string street_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.street_name_)}},
    // string city = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.city_)}},
    // string state = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.state_)}},
    // string country = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.country_)}},
    // string postal_code = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.postal_code_)}},
    // double lat = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.lat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string street_number = 1;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.street_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string street_name = 2;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.street_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 3;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.city_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 4;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 5;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.country_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string postal_code = 6;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.postal_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double lat = 7;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon = 8;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\30\15\13\4\5\7\13\0\0\0\0\0\0\0\0\0"
    "hotelreservation.Address"
    "street_number"
    "street_name"
    "city"
    "state"
    "country"
    "postal_code"
  }},
};

PROTOBUF_NOINLINE void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.Address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.street_number_.ClearToEmpty();
  _impl_.street_name_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  _impl_.postal_code_.ClearToEmpty();
  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Address::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Address::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.Address)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string street_number = 1;
  if (!this->_internal_street_number().empty()) {
    const std::string& _s = this->_internal_street_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.street_number");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string street_name = 2;
  if (!this->_internal_street_name().empty()) {
    const std::string& _s = this->_internal_street_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.street_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string city = 3;
  if (!this->_internal_city().empty()) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.city");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string state = 4;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.state");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string country = 5;
  if (!this->_internal_country().empty()) {
    const std::string& _s = this->_internal_country();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.country");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string postal_code = 6;
  if (!this->_internal_postal_code().empty()) {
    const std::string& _s = this->_internal_postal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.Address.postal_code");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // double lat = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_lat(), target);
  }

  // double lon = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_lon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.Address)
  return target;
}

::size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.Address)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string street_number = 1;
  if (!this->_internal_street_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_street_number());
  }

  // string street_name = 2;
  if (!this->_internal_street_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_street_name());
  }

  // string city = 3;
  if (!this->_internal_city().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_city());
  }

  // string state = 4;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // string country = 5;
  if (!this->_internal_country().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_country());
  }

  // string postal_code = 6;
  if (!this->_internal_postal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_postal_code());
  }

  // double lat = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 9;
  }

  // double lon = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Address::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address*>(&to_msg);
  auto& from = static_cast<const Address&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.Address)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_street_number().empty()) {
    _this->_internal_set_street_number(from._internal_street_number());
  }
  if (!from._internal_street_name().empty()) {
    _this->_internal_set_street_name(from._internal_street_name());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if (!from._internal_postal_code().empty()) {
    _this->_internal_set_postal_code(from._internal_postal_code());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = from._internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Address::IsInitialized() const {
  return true;
}

void Address::InternalSwap(Address* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.street_number_, &other->_impl_.street_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.street_name_, &other->_impl_.street_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.postal_code_, &other->_impl_.postal_code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Address, _impl_.lon_)
      + sizeof(Address::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(Address, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata Address::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HotelProfile::_Internal {
 public:
  using HasBits = decltype(std::declval<HotelProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_._has_bits_);
};

HotelProfile::HotelProfile(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.HotelProfile)
}
inline PROTOBUF_NDEBUG_INLINE HotelProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        phone_number_(arena, from.phone_number_),
        description_(arena, from.description_) {}

HotelProfile::HotelProfile(
    ::google::protobuf::Arena* arena,
    const HotelProfile& from)
    : ::google::protobuf::Message(arena) {
  HotelProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.address_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::hotelreservation::Address>(
                              arena, *from._impl_.address_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:hotelreservation.HotelProfile)
}
inline PROTOBUF_NDEBUG_INLINE HotelProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        phone_number_(arena),
        description_(arena) {}

inline void HotelProfile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.address_ = {};
}
HotelProfile::~HotelProfile() {
  // @@protoc_insertion_point(destructor:hotelreservation.HotelProfile)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HotelProfile::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.phone_number_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.address_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HotelProfile::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_._cached_size_),
              false,
          },
          &HotelProfile::MergeImpl,
          &HotelProfile::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 67, 2> HotelProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HotelProfile_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::HotelProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.name_)}},
    // string phone_number = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.phone_number_)}},
    // string description = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.description_)}},
    // .hotelreservation.Address address = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.address_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string phone_number = 3;
    {PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.phone_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 4;
    {PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .hotelreservation.Address address = 5;
    {PROTOBUF_FIELD_OFFSET(HotelProfile, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::Address>()},
  }}, {{
    "\35\2\4\14\13\0\0\0"
    "hotelreservation.HotelProfile"
    "id"
    "name"
    "phone_number"
    "description"
  }},
};

PROTOBUF_NOINLINE void HotelProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.HotelProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.phone_number_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.address_ != nullptr);
    _impl_.address_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HotelProfile::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* HotelProfile::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.HotelProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.HotelProfile.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.HotelProfile.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string phone_number = 3;
  if (!this->_internal_phone_number().empty()) {
    const std::string& _s = this->_internal_phone_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.HotelProfile.phone_number");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.HotelProfile.description");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .hotelreservation.Address address = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.address_, _impl_.address_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.HotelProfile)
  return target;
}

::size_t HotelProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.HotelProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string phone_number = 3;
  if (!this->_internal_phone_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone_number());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // .hotelreservation.Address address = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HotelProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HotelProfile*>(&to_msg);
  auto& from = static_cast<const HotelProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.HotelProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_phone_number().empty()) {
    _this->_internal_set_phone_number(from._internal_phone_number());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.address_ != nullptr);
    if (_this->_impl_.address_ == nullptr) {
      _this->_impl_.address_ =
          ::google::protobuf::Message::CopyConstruct<::hotelreservation::Address>(arena, *from._impl_.address_);
    } else {
      _this->_impl_.address_->MergeFrom(*from._impl_.address_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HotelProfile::CopyFrom(const HotelProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.HotelProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HotelProfile::IsInitialized() const {
  return true;
}

void HotelProfile::InternalSwap(HotelProfile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_number_, &other->_impl_.phone_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.address_, other->_impl_.address_);
}

::google::protobuf::Metadata HotelProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchRequest::_Internal {
 public:
};

SearchRequest::SearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : customer_name_(arena, from.customer_name_),
        in_date_(arena, from.in_date_),
        out_date_(arena, from.out_date_),
        locale_(arena, from.locale_),
        _cached_size_{0} {}

SearchRequest::SearchRequest(
    ::google::protobuf::Arena* arena,
    const SearchRequest& from)
    : ::google::protobuf::Message(arena) {
  SearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : customer_name_(arena),
        in_date_(arena),
        out_date_(arena),
        locale_(arena),
        _cached_size_{0} {}

inline void SearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.SearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.customer_name_.Destroy();
  _impl_.in_date_.Destroy();
  _impl_.out_date_.Destroy();
  _impl_.locale_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SearchRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_._cached_size_),
              false,
          },
          &SearchRequest::MergeImpl,
          &SearchRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 73, 2> SearchRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SearchRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::SearchRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string customer_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.customer_name_)}},
    // string in_date = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.in_date_)}},
    // string out_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.out_date_)}},
    // double lat = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lat_)}},
    // double lon = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lon_)}},
    // string locale = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.locale_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string customer_name = 1;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.customer_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string in_date = 2;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.in_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_date = 3;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.out_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double lat = 4;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon = 5;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string locale = 6;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.locale_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\15\7\10\0\0\6\0"
    "hotelreservation.SearchRequest"
    "customer_name"
    "in_date"
    "out_date"
    "locale"
  }},
};

PROTOBUF_NOINLINE void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.SearchRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.customer_name_.ClearToEmpty();
  _impl_.in_date_.ClearToEmpty();
  _impl_.out_date_.ClearToEmpty();
  _impl_.locale_.ClearToEmpty();
  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* SearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.SearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string customer_name = 1;
  if (!this->_internal_customer_name().empty()) {
    const std::string& _s = this->_internal_customer_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.SearchRequest.customer_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string in_date = 2;
  if (!this->_internal_in_date().empty()) {
    const std::string& _s = this->_internal_in_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.SearchRequest.in_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string out_date = 3;
  if (!this->_internal_out_date().empty()) {
    const std::string& _s = this->_internal_out_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.SearchRequest.out_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // double lat = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_lat(), target);
  }

  // double lon = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_lon(), target);
  }

  // string locale = 6;
  if (!this->_internal_locale().empty()) {
    const std::string& _s = this->_internal_locale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.SearchRequest.locale");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.SearchRequest)
  return target;
}

::size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.SearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string customer_name = 1;
  if (!this->_internal_customer_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_customer_name());
  }

  // string in_date = 2;
  if (!this->_internal_in_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_in_date());
  }

  // string out_date = 3;
  if (!this->_internal_out_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_date());
  }

  // string locale = 6;
  if (!this->_internal_locale().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_locale());
  }

  // double lat = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 9;
  }

  // double lon = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SearchRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchRequest*>(&to_msg);
  auto& from = static_cast<const SearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.SearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_customer_name().empty()) {
    _this->_internal_set_customer_name(from._internal_customer_name());
  }
  if (!from._internal_in_date().empty()) {
    _this->_internal_set_in_date(from._internal_in_date());
  }
  if (!from._internal_out_date().empty()) {
    _this->_internal_set_out_date(from._internal_out_date());
  }
  if (!from._internal_locale().empty()) {
    _this->_internal_set_locale(from._internal_locale());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = from._internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::InternalSwap(SearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.customer_name_, &other->_impl_.customer_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.in_date_, &other->_impl_.in_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_date_, &other->_impl_.out_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locale_, &other->_impl_.locale_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lon_)
      + sizeof(SearchRequest::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchResponse::_Internal {
 public:
};

SearchResponse::SearchResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.SearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotels_{visibility, arena, from.hotels_},
        _cached_size_{0} {}

SearchResponse::SearchResponse(
    ::google::protobuf::Arena* arena,
    const SearchResponse& from)
    : ::google::protobuf::Message(arena) {
  SearchResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.SearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotels_{visibility, arena},
        _cached_size_{0} {}

inline void SearchResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.SearchResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SearchResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_._cached_size_),
              false,
          },
          &SearchResponse::MergeImpl,
          &SearchResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SearchResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SearchResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::SearchResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .hotelreservation.HotelProfile hotels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_.hotels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hotelreservation.HotelProfile hotels = 1;
    {PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_.hotels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::HotelProfile>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.SearchResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotels_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* SearchResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.SearchResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hotelreservation.HotelProfile hotels = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_hotels_size());
       i < n; i++) {
    const auto& repfield = this->_internal_hotels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.SearchResponse)
  return target;
}

::size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.SearchResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .hotelreservation.HotelProfile hotels = 1;
  total_size += 1UL * this->_internal_hotels_size();
  for (const auto& msg : this->_internal_hotels()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SearchResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchResponse*>(&to_msg);
  auto& from = static_cast<const SearchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.SearchResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hotels()->MergeFrom(
      from._internal_hotels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::InternalSwap(SearchResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hotels_.InternalSwap(&other->_impl_.hotels_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RecommendRequest::_Internal {
 public:
};

RecommendRequest::RecommendRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.RecommendRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecommendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : require_(arena, from.require_),
        locale_(arena, from.locale_),
        _cached_size_{0} {}

RecommendRequest::RecommendRequest(
    ::google::protobuf::Arena* arena,
    const RecommendRequest& from)
    : ::google::protobuf::Message(arena) {
  RecommendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:hotelreservation.RecommendRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecommendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : require_(arena),
        locale_(arena),
        _cached_size_{0} {}

inline void RecommendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
RecommendRequest::~RecommendRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.RecommendRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecommendRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.require_.Destroy();
  _impl_.locale_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RecommendRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_._cached_size_),
              false,
          },
          &RecommendRequest::MergeImpl,
          &RecommendRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> RecommendRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecommendRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::RecommendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string locale = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.locale_)}},
    // double lat = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lat_)}},
    // double lon = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lon_)}},
    // string require = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.require_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double lat = 1;
    {PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon = 2;
    {PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string require = 3;
    {PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.require_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string locale = 4;
    {PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.locale_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\0\7\6\0\0\0"
    "hotelreservation.RecommendRequest"
    "require"
    "locale"
  }},
};

PROTOBUF_NOINLINE void RecommendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.RecommendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.require_.ClearToEmpty();
  _impl_.locale_.ClearToEmpty();
  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecommendRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* RecommendRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.RecommendRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double lat = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_lat(), target);
  }

  // double lon = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_lon(), target);
  }

  // string require = 3;
  if (!this->_internal_require().empty()) {
    const std::string& _s = this->_internal_require();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RecommendRequest.require");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string locale = 4;
  if (!this->_internal_locale().empty()) {
    const std::string& _s = this->_internal_locale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.RecommendRequest.locale");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.RecommendRequest)
  return target;
}

::size_t RecommendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.RecommendRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string require = 3;
  if (!this->_internal_require().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_require());
  }

  // string locale = 4;
  if (!this->_internal_locale().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_locale());
  }

  // double lat = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 9;
  }

  // double lon = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RecommendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RecommendRequest*>(&to_msg);
  auto& from = static_cast<const RecommendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.RecommendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_require().empty()) {
    _this->_internal_set_require(from._internal_require());
  }
  if (!from._internal_locale().empty()) {
    _this->_internal_set_locale(from._internal_locale());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = from._internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecommendRequest::CopyFrom(const RecommendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.RecommendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecommendRequest::IsInitialized() const {
  return true;
}

void RecommendRequest::InternalSwap(RecommendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.require_, &other->_impl_.require_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locale_, &other->_impl_.locale_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lon_)
      + sizeof(RecommendRequest::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(RecommendRequest, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata RecommendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RecommendResponse::_Internal {
 public:
};

RecommendResponse::RecommendResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.RecommendResponse)
}
inline PROTOBUF_NDEBUG_INLINE RecommendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotels_{visibility, arena, from.hotels_},
        _cached_size_{0} {}

RecommendResponse::RecommendResponse(
    ::google::protobuf::Arena* arena,
    const RecommendResponse& from)
    : ::google::protobuf::Message(arena) {
  RecommendResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.RecommendResponse)
}
inline PROTOBUF_NDEBUG_INLINE RecommendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotels_{visibility, arena},
        _cached_size_{0} {}

inline void RecommendResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecommendResponse::~RecommendResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.RecommendResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecommendResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RecommendResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RecommendResponse, _impl_._cached_size_),
              false,
          },
          &RecommendResponse::MergeImpl,
          &RecommendResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RecommendResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecommendResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::RecommendResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .hotelreservation.HotelProfile hotels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecommendResponse, _impl_.hotels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hotelreservation.HotelProfile hotels = 1;
    {PROTOBUF_FIELD_OFFSET(RecommendResponse, _impl_.hotels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::HotelProfile>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RecommendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.RecommendResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotels_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecommendResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* RecommendResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.RecommendResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hotelreservation.HotelProfile hotels = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_hotels_size());
       i < n; i++) {
    const auto& repfield = this->_internal_hotels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.RecommendResponse)
  return target;
}

::size_t RecommendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.RecommendResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .hotelreservation.HotelProfile hotels = 1;
  total_size += 1UL * this->_internal_hotels_size();
  for (const auto& msg : this->_internal_hotels()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RecommendResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RecommendResponse*>(&to_msg);
  auto& from = static_cast<const RecommendResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.RecommendResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hotels()->MergeFrom(
      from._internal_hotels());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecommendResponse::CopyFrom(const RecommendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.RecommendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecommendResponse::IsInitialized() const {
  return true;
}

void RecommendResponse::InternalSwap(RecommendResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hotels_.InternalSwap(&other->_impl_.hotels_);
}

::google::protobuf::Metadata RecommendResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

UserRequest::UserRequest(
    ::google::protobuf::Arena* arena,
    const UserRequest& from)
    : ::google::protobuf::Message(arena) {
  UserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void UserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.UserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserRequest, _impl_._cached_size_),
              false,
          },
          &UserRequest::MergeImpl,
          &UserRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> UserRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::UserRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\10\10\0\0\0\0\0"
    "hotelreservation.UserRequest"
    "username"
    "password"
  }},
};

PROTOBUF_NOINLINE void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.UserRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* UserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.UserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.UserRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.UserRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.UserRequest)
  return target;
}

::size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.UserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserRequest*>(&to_msg);
  auto& from = static_cast<const UserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.UserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::InternalSwap(UserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UserResponse::_Internal {
 public:
};

UserResponse::UserResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.UserResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

UserResponse::UserResponse(
    ::google::protobuf::Arena* arena,
    const UserResponse& from)
    : ::google::protobuf::Message(arena) {
  UserResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.UserResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void UserResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserResponse::~UserResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.UserResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserResponse, _impl_._cached_size_),
              false,
          },
          &UserResponse::MergeImpl,
          &UserResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> UserResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::UserResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(UserResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\7\0\0\0\0\0\0"
    "hotelreservation.UserResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void UserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.UserResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* UserResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.UserResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.UserResponse.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.UserResponse)
  return target;
}

::size_t UserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.UserResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserResponse*>(&to_msg);
  auto& from = static_cast<const UserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.UserResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserResponse::CopyFrom(const UserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.UserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserResponse::IsInitialized() const {
  return true;
}

void UserResponse::InternalSwap(UserResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata UserResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReservationRequest::_Internal {
 public:
};

ReservationRequest::ReservationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.ReservationRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReservationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : in_date_(arena, from.in_date_),
        out_date_(arena, from.out_date_),
        hotel_id_(arena, from.hotel_id_),
        customer_name_(arena, from.customer_name_),
        username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

ReservationRequest::ReservationRequest(
    ::google::protobuf::Arena* arena,
    const ReservationRequest& from)
    : ::google::protobuf::Message(arena) {
  ReservationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.room_number_ = from._impl_.room_number_;

  // @@protoc_insertion_point(copy_constructor:hotelreservation.ReservationRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReservationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : in_date_(arena),
        out_date_(arena),
        hotel_id_(arena),
        customer_name_(arena),
        username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void ReservationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_number_ = {};
}
ReservationRequest::~ReservationRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.ReservationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReservationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.in_date_.Destroy();
  _impl_.out_date_.Destroy();
  _impl_.hotel_id_.Destroy();
  _impl_.customer_name_.Destroy();
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReservationRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_._cached_size_),
              false,
          },
          &ReservationRequest::MergeImpl,
          &ReservationRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 96, 2> ReservationRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReservationRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::ReservationRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string in_date = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.in_date_)}},
    // string out_date = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.out_date_)}},
    // string hotel_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.hotel_id_)}},
    // string customer_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.customer_name_)}},
    // string username = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.username_)}},
    // string password = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.password_)}},
    // int64 room_number = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReservationRequest, _impl_.room_number_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.room_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string in_date = 1;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.in_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_date = 2;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.out_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hotel_id = 3;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.hotel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string customer_name = 4;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.customer_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 5;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 6;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 room_number = 7;
    {PROTOBUF_FIELD_OFFSET(ReservationRequest, _impl_.room_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\43\7\10\10\15\10\10\0"
    "hotelreservation.ReservationRequest"
    "in_date"
    "out_date"
    "hotel_id"
    "customer_name"
    "username"
    "password"
  }},
};

PROTOBUF_NOINLINE void ReservationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.ReservationRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_date_.ClearToEmpty();
  _impl_.out_date_.ClearToEmpty();
  _impl_.hotel_id_.ClearToEmpty();
  _impl_.customer_name_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.room_number_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReservationRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* ReservationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.ReservationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string in_date = 1;
  if (!this->_internal_in_date().empty()) {
    const std::string& _s = this->_internal_in_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.in_date");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_date = 2;
  if (!this->_internal_out_date().empty()) {
    const std::string& _s = this->_internal_out_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.out_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string hotel_id = 3;
  if (!this->_internal_hotel_id().empty()) {
    const std::string& _s = this->_internal_hotel_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.hotel_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string customer_name = 4;
  if (!this->_internal_customer_name().empty()) {
    const std::string& _s = this->_internal_customer_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.customer_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.username");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string password = 6;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationRequest.password");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 room_number = 7;
  if (this->_internal_room_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_room_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.ReservationRequest)
  return target;
}

::size_t ReservationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.ReservationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string in_date = 1;
  if (!this->_internal_in_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_in_date());
  }

  // string out_date = 2;
  if (!this->_internal_out_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_date());
  }

  // string hotel_id = 3;
  if (!this->_internal_hotel_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hotel_id());
  }

  // string customer_name = 4;
  if (!this->_internal_customer_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_customer_name());
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 6;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // int64 room_number = 7;
  if (this->_internal_room_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_room_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReservationRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReservationRequest*>(&to_msg);
  auto& from = static_cast<const ReservationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.ReservationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_in_date().empty()) {
    _this->_internal_set_in_date(from._internal_in_date());
  }
  if (!from._internal_out_date().empty()) {
    _this->_internal_set_out_date(from._internal_out_date());
  }
  if (!from._internal_hotel_id().empty()) {
    _this->_internal_set_hotel_id(from._internal_hotel_id());
  }
  if (!from._internal_customer_name().empty()) {
    _this->_internal_set_customer_name(from._internal_customer_name());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (from._internal_room_number() != 0) {
    _this->_impl_.room_number_ = from._impl_.room_number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReservationRequest::CopyFrom(const ReservationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.ReservationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReservationRequest::IsInitialized() const {
  return true;
}

void ReservationRequest::InternalSwap(ReservationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.in_date_, &other->_impl_.in_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_date_, &other->_impl_.out_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hotel_id_, &other->_impl_.hotel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.customer_name_, &other->_impl_.customer_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
        swap(_impl_.room_number_, other->_impl_.room_number_);
}

::google::protobuf::Metadata ReservationRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReservationResponse::_Internal {
 public:
};

ReservationResponse::ReservationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.ReservationResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReservationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

ReservationResponse::ReservationResponse(
    ::google::protobuf::Arena* arena,
    const ReservationResponse& from)
    : ::google::protobuf::Message(arena) {
  ReservationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.ReservationResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReservationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void ReservationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReservationResponse::~ReservationResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.ReservationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReservationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReservationResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReservationResponse, _impl_._cached_size_),
              false,
          },
          &ReservationResponse::MergeImpl,
          &ReservationResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> ReservationResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReservationResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::ReservationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReservationResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(ReservationResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\7\0\0\0\0\0\0"
    "hotelreservation.ReservationResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void ReservationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.ReservationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReservationResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* ReservationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.ReservationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.ReservationResponse.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.ReservationResponse)
  return target;
}

::size_t ReservationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.ReservationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReservationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReservationResponse*>(&to_msg);
  auto& from = static_cast<const ReservationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.ReservationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReservationResponse::CopyFrom(const ReservationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.ReservationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReservationResponse::IsInitialized() const {
  return true;
}

void ReservationResponse::InternalSwap(ReservationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata ReservationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NearbyRequest::_Internal {
 public:
};

NearbyRequest::NearbyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.NearbyRequest)
}
NearbyRequest::NearbyRequest(
    ::google::protobuf::Arena* arena, const NearbyRequest& from)
    : NearbyRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NearbyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NearbyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
NearbyRequest::~NearbyRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.NearbyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NearbyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NearbyRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_._cached_size_),
              false,
          },
          &NearbyRequest::MergeImpl,
          &NearbyRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NearbyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NearbyRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::NearbyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double lon = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lon_)}},
    // double lat = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double lat = 1;
    {PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon = 2;
    {PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NearbyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.NearbyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NearbyRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* NearbyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.NearbyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double lat = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_lat(), target);
  }

  // double lon = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_lon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.NearbyRequest)
  return target;
}

::size_t NearbyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.NearbyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // double lat = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 9;
  }

  // double lon = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = this->_internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NearbyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NearbyRequest*>(&to_msg);
  auto& from = static_cast<const NearbyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.NearbyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  ::uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon = from._internal_lon();
  ::uint64_t raw_lon;
  memcpy(&raw_lon, &tmp_lon, sizeof(tmp_lon));
  if (raw_lon != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NearbyRequest::CopyFrom(const NearbyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.NearbyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NearbyRequest::IsInitialized() const {
  return true;
}

void NearbyRequest::InternalSwap(NearbyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lon_)
      + sizeof(NearbyRequest::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(NearbyRequest, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata NearbyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NearbyResponse::_Internal {
 public:
};

NearbyResponse::NearbyResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.NearbyResponse)
}
inline PROTOBUF_NDEBUG_INLINE NearbyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotel_ids_{visibility, arena, from.hotel_ids_},
        _cached_size_{0} {}

NearbyResponse::NearbyResponse(
    ::google::protobuf::Arena* arena,
    const NearbyResponse& from)
    : ::google::protobuf::Message(arena) {
  NearbyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.NearbyResponse)
}
inline PROTOBUF_NDEBUG_INLINE NearbyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotel_ids_{visibility, arena},
        _cached_size_{0} {}

inline void NearbyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NearbyResponse::~NearbyResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.NearbyResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NearbyResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NearbyResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NearbyResponse, _impl_._cached_size_),
              false,
          },
          &NearbyResponse::MergeImpl,
          &NearbyResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> NearbyResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NearbyResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::NearbyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string hotel_ids = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NearbyResponse, _impl_.hotel_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string hotel_ids = 1;
    {PROTOBUF_FIELD_OFFSET(NearbyResponse, _impl_.hotel_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\37\11\0\0\0\0\0\0"
    "hotelreservation.NearbyResponse"
    "hotel_ids"
  }},
};

PROTOBUF_NOINLINE void NearbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.NearbyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NearbyResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* NearbyResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.NearbyResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string hotel_ids = 1;
  for (int i = 0, n = this->_internal_hotel_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_hotel_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.NearbyResponse.hotel_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.NearbyResponse)
  return target;
}

::size_t NearbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.NearbyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string hotel_ids = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_hotel_ids().size());
  for (int i = 0, n = _internal_hotel_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_hotel_ids().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NearbyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NearbyResponse*>(&to_msg);
  auto& from = static_cast<const NearbyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.NearbyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hotel_ids()->MergeFrom(from._internal_hotel_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NearbyResponse::CopyFrom(const NearbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.NearbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NearbyResponse::IsInitialized() const {
  return true;
}

void NearbyResponse::InternalSwap(NearbyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hotel_ids_.InternalSwap(&other->_impl_.hotel_ids_);
}

::google::protobuf::Metadata NearbyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProfilesRequest::_Internal {
 public:
};

GetProfilesRequest::GetProfilesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.GetProfilesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProfilesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotel_ids_{visibility, arena, from.hotel_ids_},
        locale_(arena, from.locale_),
        _cached_size_{0} {}

GetProfilesRequest::GetProfilesRequest(
    ::google::protobuf::Arena* arena,
    const GetProfilesRequest& from)
    : ::google::protobuf::Message(arena) {
  GetProfilesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.GetProfilesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProfilesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotel_ids_{visibility, arena},
        locale_(arena),
        _cached_size_{0} {}

inline void GetProfilesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetProfilesRequest::~GetProfilesRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.GetProfilesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetProfilesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.locale_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetProfilesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetProfilesRequest, _impl_._cached_size_),
              false,
          },
          &GetProfilesRequest::MergeImpl,
          &GetProfilesRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> GetProfilesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetProfilesRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::GetProfilesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string locale = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetProfilesRequest, _impl_.locale_)}},
    // repeated string hotel_ids = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProfilesRequest, _impl_.hotel_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string hotel_ids = 1;
    {PROTOBUF_FIELD_OFFSET(GetProfilesRequest, _impl_.hotel_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string locale = 2;
    {PROTOBUF_FIELD_OFFSET(GetProfilesRequest, _impl_.locale_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\11\6\0\0\0\0\0"
    "hotelreservation.GetProfilesRequest"
    "hotel_ids"
    "locale"
  }},
};

PROTOBUF_NOINLINE void GetProfilesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.GetProfilesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_ids_.Clear();
  _impl_.locale_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetProfilesRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetProfilesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.GetProfilesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string hotel_ids = 1;
  for (int i = 0, n = this->_internal_hotel_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_hotel_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.GetProfilesRequest.hotel_ids");
    target = stream->WriteString(1, s, target);
  }

  // string locale = 2;
  if (!this->_internal_locale().empty()) {
    const std::string& _s = this->_internal_locale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.GetProfilesRequest.locale");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.GetProfilesRequest)
  return target;
}

::size_t GetProfilesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.GetProfilesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string hotel_ids = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_hotel_ids().size());
  for (int i = 0, n = _internal_hotel_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_hotel_ids().Get(i));
  }
  // string locale = 2;
  if (!this->_internal_locale().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_locale());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetProfilesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProfilesRequest*>(&to_msg);
  auto& from = static_cast<const GetProfilesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.GetProfilesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hotel_ids()->MergeFrom(from._internal_hotel_ids());
  if (!from._internal_locale().empty()) {
    _this->_internal_set_locale(from._internal_locale());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProfilesRequest::CopyFrom(const GetProfilesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.GetProfilesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetProfilesRequest::IsInitialized() const {
  return true;
}

void GetProfilesRequest::InternalSwap(GetProfilesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hotel_ids_.InternalSwap(&other->_impl_.hotel_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locale_, &other->_impl_.locale_, arena);
}

::google::protobuf::Metadata GetProfilesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProfilesResponse::_Internal {
 public:
};

GetProfilesResponse::GetProfilesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.GetProfilesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProfilesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : profiles_{visibility, arena, from.profiles_},
        _cached_size_{0} {}

GetProfilesResponse::GetProfilesResponse(
    ::google::protobuf::Arena* arena,
    const GetProfilesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetProfilesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.GetProfilesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProfilesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : profiles_{visibility, arena},
        _cached_size_{0} {}

inline void GetProfilesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetProfilesResponse::~GetProfilesResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.GetProfilesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetProfilesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetProfilesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetProfilesResponse, _impl_._cached_size_),
              false,
          },
          &GetProfilesResponse::MergeImpl,
          &GetProfilesResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetProfilesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetProfilesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::GetProfilesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .hotelreservation.HotelProfile profiles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProfilesResponse, _impl_.profiles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hotelreservation.HotelProfile profiles = 1;
    {PROTOBUF_FIELD_OFFSET(GetProfilesResponse, _impl_.profiles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::HotelProfile>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetProfilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.GetProfilesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.profiles_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetProfilesResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetProfilesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.GetProfilesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hotelreservation.HotelProfile profiles = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_profiles_size());
       i < n; i++) {
    const auto& repfield = this->_internal_profiles().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.GetProfilesResponse)
  return target;
}

::size_t GetProfilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.GetProfilesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .hotelreservation.HotelProfile profiles = 1;
  total_size += 1UL * this->_internal_profiles_size();
  for (const auto& msg : this->_internal_profiles()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetProfilesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProfilesResponse*>(&to_msg);
  auto& from = static_cast<const GetProfilesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.GetProfilesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_profiles()->MergeFrom(
      from._internal_profiles());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProfilesResponse::CopyFrom(const GetProfilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.GetProfilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetProfilesResponse::IsInitialized() const {
  return true;
}

void GetProfilesResponse::InternalSwap(GetProfilesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.profiles_.InternalSwap(&other->_impl_.profiles_);
}

::google::protobuf::Metadata GetProfilesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRatesRequest::_Internal {
 public:
};

GetRatesRequest::GetRatesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.GetRatesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRatesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hotel_ids_{visibility, arena, from.hotel_ids_},
        in_date_(arena, from.in_date_),
        out_date_(arena, from.out_date_),
        _cached_size_{0} {}

GetRatesRequest::GetRatesRequest(
    ::google::protobuf::Arena* arena,
    const GetRatesRequest& from)
    : ::google::protobuf::Message(arena) {
  GetRatesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.GetRatesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRatesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hotel_ids_{visibility, arena},
        in_date_(arena),
        out_date_(arena),
        _cached_size_{0} {}

inline void GetRatesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetRatesRequest::~GetRatesRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.GetRatesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetRatesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.in_date_.Destroy();
  _impl_.out_date_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetRatesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_._cached_size_),
              false,
          },
          &GetRatesRequest::MergeImpl,
          &GetRatesRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2> GetRatesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetRatesRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::GetRatesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string hotel_ids = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.hotel_ids_)}},
    // string in_date = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.in_date_)}},
    // string out_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.out_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string hotel_ids = 1;
    {PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.hotel_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string in_date = 2;
    {PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.in_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_date = 3;
    {PROTOBUF_FIELD_OFFSET(GetRatesRequest, _impl_.out_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\7\10\0\0\0\0"
    "hotelreservation.GetRatesRequest"
    "hotel_ids"
    "in_date"
    "out_date"
  }},
};

PROTOBUF_NOINLINE void GetRatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.GetRatesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hotel_ids_.Clear();
  _impl_.in_date_.ClearToEmpty();
  _impl_.out_date_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetRatesRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetRatesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.GetRatesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string hotel_ids = 1;
  for (int i = 0, n = this->_internal_hotel_ids_size(); i < n; ++i) {
    const auto& s = this->_internal_hotel_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.GetRatesRequest.hotel_ids");
    target = stream->WriteString(1, s, target);
  }

  // string in_date = 2;
  if (!this->_internal_in_date().empty()) {
    const std::string& _s = this->_internal_in_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.GetRatesRequest.in_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string out_date = 3;
  if (!this->_internal_out_date().empty()) {
    const std::string& _s = this->_internal_out_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.GetRatesRequest.out_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.GetRatesRequest)
  return target;
}

::size_t GetRatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.GetRatesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string hotel_ids = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_hotel_ids().size());
  for (int i = 0, n = _internal_hotel_ids().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_hotel_ids().Get(i));
  }
  // string in_date = 2;
  if (!this->_internal_in_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_in_date());
  }

  // string out_date = 3;
  if (!this->_internal_out_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_date());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetRatesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRatesRequest*>(&to_msg);
  auto& from = static_cast<const GetRatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.GetRatesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hotel_ids()->MergeFrom(from._internal_hotel_ids());
  if (!from._internal_in_date().empty()) {
    _this->_internal_set_in_date(from._internal_in_date());
  }
  if (!from._internal_out_date().empty()) {
    _this->_internal_set_out_date(from._internal_out_date());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRatesRequest::CopyFrom(const GetRatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.GetRatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetRatesRequest::IsInitialized() const {
  return true;
}

void GetRatesRequest::InternalSwap(GetRatesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hotel_ids_.InternalSwap(&other->_impl_.hotel_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.in_date_, &other->_impl_.in_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_date_, &other->_impl_.out_date_, arena);
}

::google::protobuf::Metadata GetRatesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRatesResponse::_Internal {
 public:
};

GetRatesResponse::GetRatesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.GetRatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : rate_plans_{visibility, arena, from.rate_plans_},
        _cached_size_{0} {}

GetRatesResponse::GetRatesResponse(
    ::google::protobuf::Arena* arena,
    const GetRatesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetRatesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.GetRatesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rate_plans_{visibility, arena},
        _cached_size_{0} {}

inline void GetRatesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetRatesResponse::~GetRatesResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.GetRatesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetRatesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetRatesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetRatesResponse, _impl_._cached_size_),
              false,
          },
          &GetRatesResponse::MergeImpl,
          &GetRatesResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetRatesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetRatesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::GetRatesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .hotelreservation.RatePlan rate_plans = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetRatesResponse, _impl_.rate_plans_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .hotelreservation.RatePlan rate_plans = 1;
    {PROTOBUF_FIELD_OFFSET(GetRatesResponse, _impl_.rate_plans_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::hotelreservation::RatePlan>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetRatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.GetRatesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_plans_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetRatesResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetRatesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.GetRatesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .hotelreservation.RatePlan rate_plans = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_rate_plans_size());
       i < n; i++) {
    const auto& repfield = this->_internal_rate_plans().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.GetRatesResponse)
  return target;
}

::size_t GetRatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.GetRatesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .hotelreservation.RatePlan rate_plans = 1;
  total_size += 1UL * this->_internal_rate_plans_size();
  for (const auto& msg : this->_internal_rate_plans()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetRatesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRatesResponse*>(&to_msg);
  auto& from = static_cast<const GetRatesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.GetRatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rate_plans()->MergeFrom(
      from._internal_rate_plans());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRatesResponse::CopyFrom(const GetRatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.GetRatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetRatesResponse::IsInitialized() const {
  return true;
}

void GetRatesResponse::InternalSwap(GetRatesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rate_plans_.InternalSwap(&other->_impl_.rate_plans_);
}

::google::protobuf::Metadata GetRatesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckUserRequest::_Internal {
 public:
};

CheckUserRequest::CheckUserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.CheckUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        password_(arena, from.password_),
        _cached_size_{0} {}

CheckUserRequest::CheckUserRequest(
    ::google::protobuf::Arena* arena,
    const CheckUserRequest& from)
    : ::google::protobuf::Message(arena) {
  CheckUserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:hotelreservation.CheckUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void CheckUserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CheckUserRequest::~CheckUserRequest() {
  // @@protoc_insertion_point(destructor:hotelreservation.CheckUserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckUserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckUserRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckUserRequest, _impl_._cached_size_),
              false,
          },
          &CheckUserRequest::MergeImpl,
          &CheckUserRequest::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> CheckUserRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckUserRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::CheckUserRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CheckUserRequest, _impl_.password_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CheckUserRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(CheckUserRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(CheckUserRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\10\10\0\0\0\0\0"
    "hotelreservation.CheckUserRequest"
    "username"
    "password"
  }},
};

PROTOBUF_NOINLINE void CheckUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.CheckUserRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckUserRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* CheckUserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.CheckUserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.CheckUserRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "hotelreservation.CheckUserRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.CheckUserRequest)
  return target;
}

::size_t CheckUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.CheckUserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckUserRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckUserRequest*>(&to_msg);
  auto& from = static_cast<const CheckUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.CheckUserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckUserRequest::CopyFrom(const CheckUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.CheckUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckUserRequest::IsInitialized() const {
  return true;
}

void CheckUserRequest::InternalSwap(CheckUserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata CheckUserRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckUserResponse::_Internal {
 public:
};

CheckUserResponse::CheckUserResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:hotelreservation.CheckUserResponse)
}
CheckUserResponse::CheckUserResponse(
    ::google::protobuf::Arena* arena, const CheckUserResponse& from)
    : CheckUserResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CheckUserResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CheckUserResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.exists_ = {};
}
CheckUserResponse::~CheckUserResponse() {
  // @@protoc_insertion_point(destructor:hotelreservation.CheckUserResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckUserResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckUserResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckUserResponse, _impl_._cached_size_),
              false,
          },
          &CheckUserResponse::MergeImpl,
          &CheckUserResponse::kDescriptorMethods,
          &descriptor_table_hotel_5freservation_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CheckUserResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckUserResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::hotelreservation::CheckUserResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool exists = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckUserResponse, _impl_.exists_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CheckUserResponse, _impl_.exists_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool exists = 1;
    {PROTOBUF_FIELD_OFFSET(CheckUserResponse, _impl_.exists_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CheckUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hotelreservation.CheckUserResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.exists_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckUserResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* CheckUserResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hotelreservation.CheckUserResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool exists = 1;
  if (this->_internal_exists() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_exists(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hotelreservation.CheckUserResponse)
  return target;
}

::size_t CheckUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hotelreservation.CheckUserResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool exists = 1;
  if (this->_internal_exists() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckUserResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckUserResponse*>(&to_msg);
  auto& from = static_cast<const CheckUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:hotelreservation.CheckUserResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_exists() != 0) {
    _this->_impl_.exists_ = from._impl_.exists_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckUserResponse::CopyFrom(const CheckUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hotelreservation.CheckUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckUserResponse::IsInitialized() const {
  return true;
}

void CheckUserResponse::InternalSwap(CheckUserResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.exists_, other->_impl_.exists_);
}

::google::protobuf::Metadata CheckUserResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace hotelreservation
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_hotel_5freservation_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
